module : 파일 하나 단위
package : 파일들을 가지고 있는 폴더 / 모듈들을 구조적으로 관리
__init__.py : 2.x버전에서는 생성해야 하지만 3.x 버전에서는 파일이 없어도 패키지를 인식함 / 하위호환 위해서 생성해놓은 것을 추천
단위실행 : 독립적으로 파일 실행 / 단위 test를 할때 사용
  if __name__ == __'main'__:
    

*in package directory, created 3files
1. calculations.py
  def add(l,r):
    return l+r

  def mul(l,r):
    return l * r

  def div(l,r):
    return l/r
   
2. fibonacci.py
  class Fibonacci:
    def __init__(self, title = 'fibo'):
        self.title = title

    def fib(n):
        a,b = 0,1
        while a <n :
            print(a, end=' ')
            a,b = b, a+b

        print()

    def fib2(n):
        result = []
        a,b = 0,1
        while a <n :
            result.append(a)
            a,b = b, a+b

        return result
        
3. prints.py
  def prt1():
    print("I'm Niceboy!")

  def prt2():
    print("I'm Goodboy!")
    
 *Usage
 ## .. : go to parents
# . : present dir
# import package  then use them
# 사용1
from package.fibonacci import Fibonacci

Fibonacci.fib(300)

print("ex2 :", Fibonacci.fib2(400))
print("ex2 :", Fibonacci().title)


# 사용2(클래스)
from package.fibonacci import * # memory를 많이 사용해서 권장하지 않음

# 사용3(클래스)
from package.fibonacci import Fibonacci as fb

fb.fib(300)

# 사용4 (함수)
import package.calculations as c
print('ex3 :', c.add(10,100))

# 사용5(함수)
from package.calculations import div as d #필요한 부분만 import 해서 사용을 제일 권장
print('ex4 :', int(d(100,10)))

# 사용6(함수)
import package.prints as p
import builtins
p.prt1()
p.prt2()
print(dir(builtins))

*Results
0 1 1 2 3 5 8 13 21 34 55 89 144 233 
ex2 : [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377]
ex2 : fibo
0 1 1 2 3 5 8 13 21 34 55 89 144 233
ex3 : 110
ex4 : 10
I'm Niceboy!
I'm Goodboy!
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError',ool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', r', 'classmethod', 'compile', 'complex', 'copyright', 'cror', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'edits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', DirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'N
'eval', 'exec', 'exit', 'filter', 'float', 'format', 'fro, 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'Prozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help',sourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', ' 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass','TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'Un 'iter', 'len', 'license', 'list', 'locals', 'map', 'max'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', '__build_class__', '__debug__, 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', ord', 'pow', 'print', 'property', 'quit', 'range', 'repr'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter',, 'reversed', 'round', 'set', 'setattr', 'slice', 'sortedasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', ', 'vars', 'zip']  

