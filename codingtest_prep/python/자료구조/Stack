스택
 - 데이터를 제한저긍로 접근할 수 있는 구조
  - 한쪽 끝에서만 자료를 넣거나 뺄 수 있는 구조
 - 가장 나중에 쌓은 데이터를 가장 먼저 빼낼 수 있는 구조 (LIFO)
 
1.stack : LIFO
 - 주요 활용 : 컴퓨터 내부의 프로세스 구조의 함수 동작 방식
 - 주요 기능 
  - push(): 데이터를 스택에 넣기
  - pop(): 데이터를 스택에서 빼기

2.스택 구조와 프로세스 스택
 - 스택 구조는 프로세스 실행 구조의 가장 기본
  - 함수 호출시 프로세스 실행 구조를 스택과 비교해서 이해 필요
  
  def recursive(data):
    if data < 0:
      print('ended')
    
    else:
      print(data)
      recursive(data -1)
      print('returned', data)
      
   recursive(4)
   >>> 4
       3
       2
       1
       0
       ended
       returned 0
       returned 1
       returned 2
       returned 3
       returned 4
   
   
3. 장단점
 - 장점
  - 구조가 단순해서, 구현이 쉬다.
  - 데이터 저장/읽기 속도가 빠르다.
 - 단점(일반적인 스택 구현시)
  - 데이터 최대 갯수를 미리 정해야 한다.
   - 파이썬의 경우, 1000번까자 호출 가능함
  - 저장공간의 낭비가 발생할 수 있음
   - 미리 최대 갯수만큼 저장 공간을 확보해야 함
  
